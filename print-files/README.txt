The Simpsons TV (Remixed for HDMI display) by highping on Thingiverse: https://www.thingiverse.com/thing:5019648

Summary:
The Simpsons TV (Remixed for HDMI display)Added video with more build pics....https://www.youtube.com/watch?v=PS77R2y7a28This is a remix/remodel of the  "The Original Simpsons TV" by buba447 (https://www.thingiverse.com/thing:4943159 ).  It plays the first 11 seasons of The Simpsons in random order (or whatever content you happen to legally own).   I saw this awesome idea, and just had to build one of my own.  Unfortunately, I was unable to track down the 2.8" display that was used in the original, and had to get a larger 4" hdmi screen instead.  I tried to just scale up the original model but just couldn't make it work with the 4" display, so I decided to re-model it from the ground up.  It is a little more printer friendly... I separated the front grill so the front could be printed face down with no support.  The only things that should need support are the VCR and the volume knob.  See pics for the orientations I printed everything with.Fusion 360 file included to hopefully make it easier for others to make modifications for different hardwareI also modeled the VCR to have working micro switches and wired them into a couple (now unused) inputs on the Pi.  The function of the buttons is still to be determined.  I would like to make one of them 'skip' the current video. and possibly the other to rewind.  If anyone builds this and comes up with any code that makes the buttons 'do things', please let me know. (I know almost zero about python coding).The other change I made on my build was to add a relay so the audio and backlight can turn on/off together from the power button.  This is totally optional.You can follow buba's well written and detailed build guide for the original model (https://withrow.io/simpsons-tv-build-guide) for most of the software side setup of the pi.  You will only need to skip the parts where he sets up the display and replace them with the config info for the waveshare display (or whatever display you use) in the config.txt file.  The hdmi display that I used had a physical backlight switch so I soldered the power button (through a relay) to bypass that switch.  Everything else from the original design (PWM audio, amp, speaker) works fine with the hdmi display.  The other deviations from the original design are in the switch and pot.  I used a different toggle switch, and a standard pot (see pics).  The tv is modeled to fit these, but the models could be modified to fit whatever hardware you end up having.  Big thanks to Buba447 for coming up with this awesome idea, and for taking the time to write up such a great build guide!I know I had a ton of questions trying to make this work with different hardware than the original, so if anyone else is trying, feel free to ask in the comments.  I may or may not be able to help, but I am always willing to try.If you build one of these, be sure to go give thanks to buba447Edit:  I was asked about the wiring I used, so I have added a crudely drawn wiring diagram of how mine is wired.  This is every connection in my build (except the optional gpio 22 and 23 wires that run to the VCR buttons)Edit2: In this particular build (using the 800x480 waveshare display) I intentionally cover part of the display with the front to more closely match the 4:3 aspect ratio of an old TV (not an exact match, but closer).  Because of this, the line of the "player.py" code was changed to the following....playProcess = Popen(['omxplayer', '--win', '00,00,750,480', video])If you use a different display or decide to model the front to be an exact 4:3, you can adjust those numbers to match your final display layout.   The "win" part of the line just defines the window size (x1,y1,x2,y2).  In the case above the width starts at x=0 and runs to x=750 and the height goes from y=0 to y=480.  The omxplayer will then stretch and position the video based on these dimensions. I had to throw different numbers at it until I found what looked goodEdit 3:  If you are having any audio issues, be sure to connect A- to Ground and also add a capacitor between A+ and A- (see added pic).  The audio will work without the capacitor, but will sound very "tinny".  The cap really improves the audio quality.